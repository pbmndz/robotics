//Source Code
#include <PS4BT.h>
#include <usbhub.h>

// Satisfy the IDE, which needs to see the include statement in the ino too.
#ifdef dobogusinclude
#include <spi4teensy3.h>
#endif
#include <SPI.h>
const int motorPin1  = 3;  // Pin 14 of L293
const int motorPin2  = 4;  // Pin 10 of L293
//Motor B
const int motorPin3  = 5; // Pin  7 of L293
const int motorPin4  = 6;  // Pin  2 of L293

USB Usb;
//USBHub Hub1(&Usb); // Some dongles have a hub inside
BTD Btd(&Usb); // You have to create the Bluetooth Dongle instance like so

/* You can create the instance of the PS4BT class in two ways */
// This will start an inquiry and then pair with the PS4 controller - you only have to do this once
// You will need to hold down the PS and Share button at the same time, the PS4 controller will then start to blink rapidly indicating that it is in pairing mode
PS4BT PS4(&Btd, PAIR);

// After that you can simply create the instance like so and then press the PS button on the device
//PS4BT PS4(&Btd);

bool printAngle, printTouch;
uint8_t oldL2Value, oldR2Value;


// Define constants for motor speeds
const int MOTOR_STOP = 0;
const int MOTOR_FULL_SPEED = 244;

// Define functions for forward and reverse movement
void moveForward() {
  analogWrite(motorPin1, MOTOR_STOP );       // reverse
  analogWrite(motorPin2, MOTOR_FULL_SPEED); // forward
  analogWrite(motorPin3, MOTOR_STOP); //reverse
  analogWrite(motorPin4, MOTOR_FULL_SPEED);       // forward
}
void moveBackward() {
  analogWrite(motorPin1, MOTOR_FULL_SPEED );       // reverse
  analogWrite(motorPin2, MOTOR_STOP); // forward
  analogWrite(motorPin3, MOTOR_FULL_SPEED); //reverse
  analogWrite(motorPin4, MOTOR_STOP);       // forward
}
void turnRight(){
  analogWrite(motorPin1, 0);       // reverse
  analogWrite(motorPin2, MOTOR_FULL_SPEED); // forward
  analogWrite(motorPin3, MOTOR_FULL_SPEED); //reverse
  analogWrite(motorPin4, 0);       // forward
}
void turnLeft(){
  analogWrite(motorPin1, MOTOR_FULL_SPEED );       // reverse
  analogWrite(motorPin2, 0); // forward
  analogWrite(motorPin3, 0); //reverse
  analogWrite(motorPin4, MOTOR_FULL_SPEED);       // forward
}
void attack(){
  analogWrite(motorPin1, MOTOR_STOP );       // reverse
  analogWrite(motorPin2, MOTOR_FULL_SPEED); // forward
  analogWrite(motorPin3, MOTOR_STOP); //reverse
  analogWrite(motorPin4, MOTOR_FULL_SPEED);       // forward
}

void setup() {
  pinMode(motorPin1, OUTPUT);  
  pinMode(motorPin2, OUTPUT);
  pinMode(motorPin3, OUTPUT);  
  pinMode(motorPin4, OUTPUT);
  
  Serial.begin(115200);
#if !defined(__MIPSEL__)
  while (!Serial); // Wait for serial port to connect - used on Leonardo, Teensy and other boards with built-in USB CDC serial connection
#endif
  if (Usb.Init() == -1) {
    Serial.print(F("\r\nOSC did not start"));
    while (1); // Halt
  }
  Serial.print(F("\r\nPS4 Bluetooth Library Started"));

}
void loop() {
  Usb.Task();

  if (PS4.connected()) {
  //  if (PS4.getAnalogHat(LeftHatX) > 137 || PS4.getAnalogHat(LeftHatX) < 117 || PS4.getAnalogHat(LeftHatY) > 137 || PS4.getAnalogHat(LeftHatY) < 117 || PS4.getAnalogHat(RightHatX) > 137 || PS4.getAnalogHat(RightHatX) < 117 || PS4.getAnalogHat(RightHatY) > 137 || PS4.getAnalogHat(RightHatY) < 117) {
      if(PS4.getAnalogHat(LeftHatX)<10)
      {
      moveForward();
    Serial.print("\nHatX: 50 ");
        }
//      else if(PS4.getAnalogHat(LeftHatX)>240)
//      {
//    digitalWrite(IN1, LOW);
//    digitalWrite(IN2, HIGH);
//    digitalWrite(IN3, HIGH);
//    digitalWrite(IN4, LOW);
//    
//    Serial.print("\nHatX: 200 ");
//        }
//        else if(PS4.getAnalogHat(LeftHatY) < 20)
//        {
//    digitalWrite(IN1, HIGH);
//    digitalWrite(IN2, LOW);
//    digitalWrite(IN3, HIGH);
//    digitalWrite(IN4, LOW);
//    
//    Serial.print("\nHatY: 50 ");
//          }
//          else if(PS4.getAnalogHat(LeftHatY) > 200)
//        {
//    digitalWrite(IN1, LOW);
//    digitalWrite(IN2, HIGH);
//    digitalWrite(IN3, LOW);
//    digitalWrite(IN4, HIGH);
//        Serial.print("\nHatY: 200 ");
//          }
//        else {
//    digitalWrite(IN1, LOW);
//    digitalWrite(IN2, LOW);
//    digitalWrite(IN3, LOW);
//    digitalWrite(IN4, LOW);
//        Serial.print("\nrotate the joystick ");
//         
//
//          }
//      
}
}
