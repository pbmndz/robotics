#include <Arduino.h>
#include <SharpIR.h>
#include <NewPing.h>
//L293D

//Motor A
const int motorPin1  = 3;  
const int motorPin2  = 4;  
//Motor B
const int motorPin3  = 5; 
const int motorPin4  = 6; 

// Define constants for motor speeds
// you can use any speed in this int percent

const int MOTOR_STOP = 0;
const int MOTOR_10_SPEED = 24.4;
const int MOTOR_20_SPEED = 48.8;
const int MOTOR_30_SPEED = 73.2;
const int MOTOR_40_SPEED = 97.6;
const int MOTOR_50_SPEED = 122;
const int MOTOR_60_SPEED = 146.4;
const int MOTOR_70_SPEED = 170.8;
const int MOTOR_80_SPEED = 195.2;
const int MOTOR_90_SPEED = 219.6;
const int MOTOR_100_SPEED = 244;

const int MOTOR_FULL_SPEED = 244;
const int MOTOR_HALF_SPEED = 122;


// Define functions for forward and reverse movement
// The movement may vary depending on where you place the DC motor on the L293D
void turnLeft() {
  analogWrite(motorPin1, MOTOR_STOP );       
  analogWrite(motorPin2, MOTOR_FULL_SPEED); 
  analogWrite(motorPin3, MOTOR_STOP); 
  analogWrite(motorPin4, MOTOR_FULL_SPEED);       
}
void turnRight() {
  analogWrite(motorPin1, MOTOR_FULL_SPEED );       
  analogWrite(motorPin2, MOTOR_STOP); 
  analogWrite(motorPin3, MOTOR_FULL_SPEED); 
  analogWrite(motorPin4, MOTOR_STOP);       
}
void forward(){
  analogWrite(motorPin1, 0);       
  analogWrite(motorPin2, MOTOR_FULL_SPEED); 
  analogWrite(motorPin3, MOTOR_FULL_SPEED); 
  analogWrite(motorPin4, 0);       
}
void backward(){
  analogWrite(motorPin1, MOTOR_FULL_SPEED );       
  analogWrite(motorPin2, 0); 
  analogWrite(motorPin3, 0); 
  analogWrite(motorPin4, MOTOR_FULL_SPEED);       
}
void stop(){
  analogWrite(motorPin1, 0 );       
  analogWrite(motorPin2, 0); 
  analogWrite(motorPin3, 0); 
  analogWrite(motorPin4, 0);      
}
//2 ultrasonic ultrasonic sensor 
// RIGHT
#define TRIGGER_PIN_RIGHT   12  // Arduino pin tied to trigger pin on the ultrasonic sensor.
#define ECHO_PIN_RIGHT      13  // Arduino pin tied to echo pin on the ultrasonic sensor.

// LEFT
#define TRIGGER_PIN_LEFT   11  // Arduino pin tied to trigger pin on the ultrasonic sensor.
#define ECHO_PIN_LEFT      10 // Arduino pin tied to echo pin on the ultrasonic sensor.

#define MAX_DISTANCE_FORNT 300 // Maximum distance we want to ping for (in centimeters). Maximum sensor distance is rated at 400-500cm.
#define MAX_DISTANCE_SIDE 300
#define ATTACKside 40

NewPing sonar_right(TRIGGER_PIN_RIGHT, ECHO_PIN_RIGHT, MAX_DISTANCE_SIDE); // NewPing setup of pins and maximum distance.
NewPing sonar_left(TRIGGER_PIN_LEFT, ECHO_PIN_LEFT, MAX_DISTANCE_SIDE); // NewPing setup of pins and maximum distance.
  
//LEFT AND RIGTH
// line
#define SensorL A2
#define SensorR A1
#define SensorBR A0
#define SensorBL A3
int value_DL = SensorL;
int value_DR = SensorR;
int value_BR = SensorBR;
int value_BL = SensorBL;

// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FOR SHARP
SharpIR sensorR( SharpIR::GP2Y0A41SK0F, A5 );
SharpIR sensorL( SharpIR::GP2Y0A41SK0F, A4 );


void setup() {
Serial.begin(9600);
//Set pins as outputs
//  motor 
pinMode(motorPin1, OUTPUT);
pinMode(motorPin2, OUTPUT);
pinMode(motorPin3, OUTPUT);
pinMode(motorPin4, OUTPUT);

// line sensor
pinMode(SensorR, INPUT);
pinMode(SensorL, INPUT);

}

void loop() {
// line
value_DR = analogRead(SensorR);// reads the digital input from the IR distance sensor
value_DL = analogRead(SensorL);// reads the digital input from the IR distance sensor
value_BR = analogRead(SensorBR);
value_BL = analogRead(SensorBL);
// front sensor
int distanceR = sensorR.getDistance(); //Calculate the distance in centimeters and store the value in a variable
int distanceL = sensorL.getDistance(); //Calculate the distance in centimeters and store the value in a variable

//For debug/checking sensor

//LINE
//Serial.print(" DR:");
//Serial.print(value_DR);
//Serial.print(" DL:");
//Serial.print(value_DL); 
//Serial.print(" BL:");
//Serial.print(value_BL);
//Serial.print(" BR:");
//Serial.println(value_BR); 
////FRONT
//Serial.print(" ");
//Serial.print("FR");
//Serial.print( distanceR ); 
//Serial.print(" ");
//Serial.print("FL");
//Serial.println( distanceL );
//// side
//Serial.print(" ");
//Serial.print(sonar_right.ping_cm());
//Serial.print("R   L");
//Serial.println(sonar_left.ping_cm());

// movement
if (distanceL < 8 or distanceR < 8) {
  forward();
}
if (value_DR >= 70 and value_DL >= 70){
  if (sonar_left.ping_cm() < 13) {
  while(distanceL > 10 and sonar_left.ping_cm() > 10){
  turnLeft();
  if(distanceL < 10){
  break;
  }
  }
  }
  else if (sonar_right.ping_cm() < 13) {
  while(distanceL > 10 and sonar_right.ping_cm() > 10){
  turnRight();
  if(distanceR < 10){
  break;
  }
  }
  }
}
else if (value_DR <= 100 and value_DL <= 100){
  stop();
  delay(50);
  backward();
  delay(300);
  turnRight();
  delay(400);
}
else if(value_DR <= 100){
 stop();
 delay(50);
 backward();
 delay(150);
 turnLeft();
 delay(350);
}
else if(value_DL <= 100){
 stop();
 delay(50);
 backward();
 delay(150);
 turnRight();
 delay(350);
}
else if (value_DR <= 100 and value_BR <= 100){
  stop();
  delay(50);
  turnLeft();
  delay(400);
}
else if (value_DL <= 100 and value_BL <= 100){
  stop();
  delay(50);
  turnRight();
  delay(400);
}
else {
 stop();
}
 
}
